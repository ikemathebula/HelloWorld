2025-06-04 12:27:26,731 - semgrep.run_scan - DEBUG - semgrep version 1.2.0
2025-06-04 12:27:26,738 - semgrep.git - DEBUG - Failed to get project url from 'git ls-remote': Command failed with exit code: 128
-----
Command failed with output:
fatal: No remote configured to list refs from.


Failed to run 'git ls-remote --get-url'. Possible reasons:

- the git binary is not available
- the current working directory is not a git repository
- the baseline commit is not a parent of the current commit
    (if you are running through semgrep-app, check if you are setting `SEMGREP_BRANCH` or `SEMGREP_BASELINE_COMMIT` properly)
- the current working directory is not marked as safe
    (fix with `git config --global --add safe.directory $(pwd)`)

Try running the command yourself to debug the issue.
2025-06-04 12:27:26,739 - semgrep.config_resolver - DEBUG - Loading local config from /home/runner/workspace/.config/.semgrep/semgrep_rules.json
2025-06-04 12:27:26,746 - semgrep.config_resolver - DEBUG - Done loading local config from /home/runner/workspace/.config/.semgrep/semgrep_rules.json
2025-06-04 12:27:26,749 - semgrep.config_resolver - DEBUG - Saving rules to /tmp/semgrep-com8mthn.rules
2025-06-04 12:27:27,007 - semgrep.semgrep_core - DEBUG - Failed to open resource semgrep-core-proprietary: [Errno 2] No such file or directory: '/tmp/_MEIkGXRXj/semgrep/bin/semgrep-core-proprietary'.
2025-06-04 12:27:27,686 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-06-04 12:27:27,686 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-06-04 12:27:27,686 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-06-04 12:27:27,687 - semgrep.config_resolver - DEBUG - loaded 1 configs in 0.9487454891204834
2025-06-04 12:27:27,782 - semgrep.run_scan - VERBOSE - running 711 rules from 1 config /home/runner/workspace/.config/.semgrep/semgrep_rules.json_0
2025-06-04 12:27:27,782 - semgrep.run_scan - VERBOSE - No .semgrepignore found. Using default .semgrepignore rules. See the docs for the list of default ignores: https://semgrep.dev/docs/cli-usage/#ignore-files
2025-06-04 12:27:27,785 - semgrep.run_scan - VERBOSE - Rules:
2025-06-04 12:27:27,785 - semgrep.run_scan - VERBOSE - <SKIPPED DATA (too many entries; use --max-log-list-entries)>
2025-06-04 12:27:27,885 - semgrep.core_runner - DEBUG - Passing whole rules directly to semgrep_core
2025-06-04 12:27:27,981 - semgrep.core_runner - DEBUG - Running Semgrep engine with command:
2025-06-04 12:27:27,981 - semgrep.core_runner - DEBUG - /tmp/_MEIkGXRXj/semgrep/bin/opengrep-core -json -rules /tmp/tmp5cv8rhg0.json -j 8 -targets /tmp/tmpbea9vl66 -timeout 5 -timeout_threshold 3 -max_memory 0 -fast
2025-06-04 12:27:30,175 - semgrep.core_runner - DEBUG - --- semgrep-core stderr ---
[00.09][[34mINFO[0m]: Executed as: /tmp/_MEIsH6Lcf/semgrep/bin/opengrep-core -json -rules /tmp/tmper7y4o68.json -j 8 -targets /tmp/tmp41xtj3oc -timeout 5 -timeout_threshold 3 -max_memory 0 -fast
[00.09][[34mINFO[0m]: Version: 1.2.0
[00.09][[34mINFO[0m]: Parsing rules in /tmp/tmper7y4o68.json
[00.62][[34mINFO[0m]: scan: processing 14 files (skipping 0), with 524 rules (skipping 0 )
[02.22][[34mINFO[0m]: Custom ignore pattern: None
[02.22][[34mINFO[0m]: Custom ignore pattern: None
--- end semgrep-core stderr ---
2025-06-04 12:27:30,182 - semgrep.rule_match - DEBUG - match_key = ('', PosixPath('network_utils.py'), 'config..semgrep.vendored-rules.python.lang.security.audit.dangerous-subprocess-use-audit') match_id = 84712a099f6194078b6ed9d82b4083d50e55f04630b7c37ec92d0d8a10a2b3f659d1db2a1114b662fe9b2920b0d1a504a570f0333a925788eb3b2d0f4da28403_0
2025-06-04 12:27:30,183 - semgrep.rule_match - DEBUG - match_key = ('$ARR = ["=~/(sh|bash|ksh|csh|tcsh|zsh)/", "-c", ...]\n...\n $ARR = [...]\n...\n subprocess.run(*$ARR, ...) subprocess.run([*$ARR, ...]) subprocess.run("...", ...) subprocess.run(("...",...), ...) subprocess.run(...) subprocess.run(["...",...], ...) subprocess.CalledProcessError(...) subprocess.SubprocessError(...) subprocess.run("=~/(python)/","...",...) subprocess.run("=~/(python)/",...) subprocess.run("=~/(sh|bash|ksh|csh|tcsh|zsh)/","-c","...",...) subprocess.run("=~/(sh|bash|ksh|csh|tcsh|zsh)/","-c",...) subprocess.run(("=~/(python)/","...",...),...) subprocess.run(("=~/(python)/",...),...) subprocess.run(["=~/(python)/",...],...) subprocess.run(["=~/(python)/","...",...],...) subprocess.run(("=~/(sh|bash|ksh|csh|tcsh|zsh)/","-c","...",...),...) subprocess.run(("=~/(sh|bash|ksh|csh|tcsh|zsh)/","-c",...),...) subprocess.run(["=~/(sh|bash|ksh|csh|tcsh|zsh)/","-c",...],...) subprocess.run(["=~/(sh|bash|ksh|csh|tcsh|zsh)/","-c","...",...],...)', PosixPath('network_utils.py'), 'config..semgrep.vendored-rules.python.lang.security.audit.dangerous-subprocess-use-audit') match_id = 4f380f5978c47772871942325ea5610b68ac3c6ec809455b8cfa099f04202c7048a973159bbdd725205846a9409cf2acf330a78f43322e50d70e623149f0646d_0
2025-06-04 12:27:30,183 - semgrep.rule_match - DEBUG - match_key = ('$ARR = ["=~/(sh|bash|ksh|csh|tcsh|zsh)/", "-c", ...]\n...\n $ARR = [...]\n...\n subprocess.run(*$ARR, ...) subprocess.run([*$ARR, ...]) subprocess.run("...", ...) subprocess.run(("...",...), ...) subprocess.run(...) subprocess.run(["...",...], ...) subprocess.CalledProcessError(...) subprocess.SubprocessError(...) subprocess.run("=~/(python)/","...",...) subprocess.run("=~/(python)/",...) subprocess.run("=~/(sh|bash|ksh|csh|tcsh|zsh)/","-c","...",...) subprocess.run("=~/(sh|bash|ksh|csh|tcsh|zsh)/","-c",...) subprocess.run(("=~/(python)/","...",...),...) subprocess.run(("=~/(python)/",...),...) subprocess.run(["=~/(python)/",...],...) subprocess.run(["=~/(python)/","...",...],...) subprocess.run(("=~/(sh|bash|ksh|csh|tcsh|zsh)/","-c","...",...),...) subprocess.run(("=~/(sh|bash|ksh|csh|tcsh|zsh)/","-c",...),...) subprocess.run(["=~/(sh|bash|ksh|csh|tcsh|zsh)/","-c",...],...) subprocess.run(["=~/(sh|bash|ksh|csh|tcsh|zsh)/","-c","...",...],...)', PosixPath('network_utils.py'), 'config..semgrep.vendored-rules.python.lang.security.audit.dangerous-subprocess-use-audit') match_id = 4f380f5978c47772871942325ea5610b68ac3c6ec809455b8cfa099f04202c7048a973159bbdd725205846a9409cf2acf330a78f43322e50d70e623149f0646d_0
2025-06-04 12:27:30,184 - semgrep.rule_match - DEBUG - match_key = ('$ARR = ["=~/(sh|bash|ksh|csh|tcsh|zsh)/", "-c", ...]\n...\n $ARR = [...]\n...\n subprocess.run(*$ARR, ...) subprocess.run([*$ARR, ...]) subprocess.run("...", ...) subprocess.run(("...",...), ...) subprocess.run(...) subprocess.run(["...",...], ...) subprocess.CalledProcessError(...) subprocess.SubprocessError(...) subprocess.run("=~/(python)/","...",...) subprocess.run("=~/(python)/",...) subprocess.run("=~/(sh|bash|ksh|csh|tcsh|zsh)/","-c","...",...) subprocess.run("=~/(sh|bash|ksh|csh|tcsh|zsh)/","-c",...) subprocess.run(("=~/(python)/","...",...),...) subprocess.run(("=~/(python)/",...),...) subprocess.run(["=~/(python)/",...],...) subprocess.run(["=~/(python)/","...",...],...) subprocess.run(("=~/(sh|bash|ksh|csh|tcsh|zsh)/","-c","...",...),...) subprocess.run(("=~/(sh|bash|ksh|csh|tcsh|zsh)/","-c",...),...) subprocess.run(["=~/(sh|bash|ksh|csh|tcsh|zsh)/","-c",...],...) subprocess.run(["=~/(sh|bash|ksh|csh|tcsh|zsh)/","-c","...",...],...)', PosixPath('network_utils.py'), 'config..semgrep.vendored-rules.python.lang.security.audit.dangerous-subprocess-use-audit') match_id = 4f380f5978c47772871942325ea5610b68ac3c6ec809455b8cfa099f04202c7048a973159bbdd725205846a9409cf2acf330a78f43322e50d70e623149f0646d_0
2025-06-04 12:27:30,185 - semgrep.rule_match - DEBUG - match_key = ('', PosixPath('network_utils.py'), 'config..semgrep.vendored-rules.python.lang.security.audit.dangerous-subprocess-use-audit') match_id = 84712a099f6194078b6ed9d82b4083d50e55f04630b7c37ec92d0d8a10a2b3f659d1db2a1114b662fe9b2920b0d1a504a570f0333a925788eb3b2d0f4da28403_0
2025-06-04 12:27:30,185 - semgrep.rule_match - DEBUG - match_key = ('$ARR = ["=~/(sh|bash|ksh|csh|tcsh|zsh)/", "-c", ...]\n...\n $ARR = [...]\n...\n subprocess.run(*$ARR, ...) subprocess.run([*$ARR, ...]) subprocess.run("...", ...) subprocess.run(("...",...), ...) subprocess.run(...) subprocess.run(["...",...], ...) subprocess.CalledProcessError(...) subprocess.SubprocessError(...) subprocess.run("=~/(python)/","...",...) subprocess.run("=~/(python)/",...) subprocess.run("=~/(sh|bash|ksh|csh|tcsh|zsh)/","-c","...",...) subprocess.run("=~/(sh|bash|ksh|csh|tcsh|zsh)/","-c",...) subprocess.run(("=~/(python)/","...",...),...) subprocess.run(("=~/(python)/",...),...) subprocess.run(["=~/(python)/",...],...) subprocess.run(["=~/(python)/","...",...],...) subprocess.run(("=~/(sh|bash|ksh|csh|tcsh|zsh)/","-c","...",...),...) subprocess.run(("=~/(sh|bash|ksh|csh|tcsh|zsh)/","-c",...),...) subprocess.run(["=~/(sh|bash|ksh|csh|tcsh|zsh)/","-c",...],...) subprocess.run(["=~/(sh|bash|ksh|csh|tcsh|zsh)/","-c","...",...],...)', PosixPath('network_utils.py'), 'config..semgrep.vendored-rules.python.lang.security.audit.dangerous-subprocess-use-audit') match_id = 4f380f5978c47772871942325ea5610b68ac3c6ec809455b8cfa099f04202c7048a973159bbdd725205846a9409cf2acf330a78f43322e50d70e623149f0646d_0
2025-06-04 12:27:30,186 - semgrep.rule_match - DEBUG - match_key = ('$ARR = ["=~/(sh|bash|ksh|csh|tcsh|zsh)/", "-c", ...]\n...\n $ARR = [...]\n...\n subprocess.run(*$ARR, ...) subprocess.run([*$ARR, ...]) subprocess.run("...", ...) subprocess.run(("...",...), ...) subprocess.run(...) subprocess.run(["...",...], ...) subprocess.CalledProcessError(...) subprocess.SubprocessError(...) subprocess.run("=~/(python)/","...",...) subprocess.run("=~/(python)/",...) subprocess.run("=~/(sh|bash|ksh|csh|tcsh|zsh)/","-c","...",...) subprocess.run("=~/(sh|bash|ksh|csh|tcsh|zsh)/","-c",...) subprocess.run(("=~/(python)/","...",...),...) subprocess.run(("=~/(python)/",...),...) subprocess.run(["=~/(python)/",...],...) subprocess.run(["=~/(python)/","...",...],...) subprocess.run(("=~/(sh|bash|ksh|csh|tcsh|zsh)/","-c","...",...),...) subprocess.run(("=~/(sh|bash|ksh|csh|tcsh|zsh)/","-c",...),...) subprocess.run(["=~/(sh|bash|ksh|csh|tcsh|zsh)/","-c",...],...) subprocess.run(["=~/(sh|bash|ksh|csh|tcsh|zsh)/","-c","...",...],...)', PosixPath('network_utils.py'), 'config..semgrep.vendored-rules.python.lang.security.audit.dangerous-subprocess-use-audit') match_id = 4f380f5978c47772871942325ea5610b68ac3c6ec809455b8cfa099f04202c7048a973159bbdd725205846a9409cf2acf330a78f43322e50d70e623149f0646d_0
2025-06-04 12:27:30,186 - semgrep.rule_match - DEBUG - match_key = ('$ARR = ["=~/(sh|bash|ksh|csh|tcsh|zsh)/", "-c", ...]\n...\n $ARR = [...]\n...\n subprocess.run(*$ARR, ...) subprocess.run([*$ARR, ...]) subprocess.run("...", ...) subprocess.run(("...",...), ...) subprocess.run(...) subprocess.run(["...",...], ...) subprocess.CalledProcessError(...) subprocess.SubprocessError(...) subprocess.run("=~/(python)/","...",...) subprocess.run("=~/(python)/",...) subprocess.run("=~/(sh|bash|ksh|csh|tcsh|zsh)/","-c","...",...) subprocess.run("=~/(sh|bash|ksh|csh|tcsh|zsh)/","-c",...) subprocess.run(("=~/(python)/","...",...),...) subprocess.run(("=~/(python)/",...),...) subprocess.run(["=~/(python)/",...],...) subprocess.run(["=~/(python)/","...",...],...) subprocess.run(("=~/(sh|bash|ksh|csh|tcsh|zsh)/","-c","...",...),...) subprocess.run(("=~/(sh|bash|ksh|csh|tcsh|zsh)/","-c",...),...) subprocess.run(["=~/(sh|bash|ksh|csh|tcsh|zsh)/","-c",...],...) subprocess.run(["=~/(sh|bash|ksh|csh|tcsh|zsh)/","-c","...",...],...)', PosixPath('network_utils.py'), 'config..semgrep.vendored-rules.python.lang.security.audit.dangerous-subprocess-use-audit') match_id = 4f380f5978c47772871942325ea5610b68ac3c6ec809455b8cfa099f04202c7048a973159bbdd725205846a9409cf2acf330a78f43322e50d70e623149f0646d_1
2025-06-04 12:27:30,188 - semgrep.core_runner - DEBUG - semgrep ran in 0:00:02.362676 on 6 files
2025-06-04 12:27:30,190 - semgrep.core_runner - DEBUG - findings summary: 0 warning, 2 error, 0 info
2025-06-04 12:27:30,192 - semgrep.app.auth - DEBUG - Getting API token from settings file
2025-06-04 12:27:30,192 - semgrep.app.auth - DEBUG - No API token found in settings file
2025-06-04 12:27:30,193 - semgrep.semgrep_core - DEBUG - Failed to open resource semgrep-core-proprietary: [Errno 2] No such file or directory: '/tmp/_MEIsH6Lcf/semgrep/bin/semgrep-core-proprietary'.
2025-06-04 12:27:30,298 - semgrep.output - VERBOSE - 
========================================
Files skipped:
========================================

  Always skipped by Opengrep:

   • <none>

  Skipped by .gitignore:
  (Disable by passing --no-git-ignore)

   • <all files not listed by `git ls-files` were skipped>

  Skipped by .semgrepignore:
  - https://semgrep.dev/docs/ignoring-files-folders-code/#understand-semgrep-defaults

   • <none>

  Skipped by --include patterns:

   • <none>

  Skipped by --exclude patterns:

   • <none>

  Files skipped due to insufficient read permissions:

   • <none>

  Skipped by limiting to files smaller than 1000000 bytes:
  (Adjust with the --max-target-bytes flag)

   • <none>

  Partially analyzed due to parsing or internal Opengrep errors

   • <none>

2025-06-04 12:27:30,299 - semgrep.output - INFO - Some files were skipped or only partially analyzed.
  Scan was limited to files tracked by git.

Ran 488 rules on 6 files: 2 findings.
2025-06-04 12:27:30,300 - semgrep.app.version - DEBUG - Version cache does not exist
2025-06-04 12:27:30,317 - semgrep.metrics - VERBOSE - Not sending pseudonymous metrics since metrics are configured to OFF and registry usage is False
